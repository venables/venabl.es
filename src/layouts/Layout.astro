---
import "@fontsource-variable/jetbrains-mono"
import "../styles/fonts.css"
import "../styles/globals.css"
import { SEO } from "astro-seo"
import Footer from "./Footer.astro"
import mattVenablesImage from "../assets/matt-venables.png"
import Avatar from "../components/Avatar.astro"
import GoogleAnalytics from "../components/analytics/GoogleAnalytics.astro"
import PostHog from "../components/analytics/PostHog.astro"
import { siteConfig } from "../config/site"
import { cn } from "../lib/utils/cn"

interface Props {
  title: string
  description?: string
  canonical?: string | URL
  image?: {
    alt?: string
    height?: number
    url?: string
    width?: number
  }
}

const url = new URL(Astro.request.url)
const host = `${url.protocol}//${url.host}`
const { title, description, image, canonical } = Astro.props

const isActive = (path: string, exact = false) => {
  return exact
    ? Astro.url.pathname === path
    : Astro.url.pathname.startsWith(path)
}
---

<!doctype html>
<html lang="en">
  <head>
    <PostHog id="phc_3E0P50QSoLWB5ELOsfh19cEXzhu1fu1BhDqxY3fXzd9" />
    <GoogleAnalytics id="G-MH0RX39N6C" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="application-name" content={siteConfig.name} />
    <SEO
      title={title}
      titleTemplate={`%s | ${siteConfig.name}`}
      description={description ?? siteConfig.description}
      canonical={canonical}
      openGraph={{
        basic: {
          url: host,
          title,
          type: "website",
          image: image?.url ?? `${host}/og.png`
        },
        optional: {
          siteName: siteConfig.name,
          description: description ?? siteConfig.description,
          locale: "en_US"
        },
        image: image
      }}
      twitter={{
        creator: siteConfig.author.twitter,
        card: "summary_large_image",
        site: siteConfig.handles.twitter,
        image: image?.url ?? `${host}/og.png`,
        title,
        description: description ?? siteConfig.description
      }}
    />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link
      rel="icon"
      type="image/png"
      sizes="192x192"
      href="/favicon-192x192.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="512x512"
      href="/favicon-512x512.png"
    />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <title>{title}</title>
  </head>

  <body class="flex min-h-screen flex-col gap-8 p-2 font-mono antialiased">
    <header>
      <nav class="flex flex-row items-center gap-2 sm:text-sm">
        <a
          href="/"
          data-swing-trigger
          class={cn(
            "flex flex-row items-center gap-2",
            isActive("/", true) ? "text-foreground no-underline" : "link"
          )}
        >
          <Avatar
            image={mattVenablesImage}
            class="size-6 rounded-sm md:size-8 md:rounded-md"
          />
          <span>{siteConfig.author.name}</span></a
        >
        <span class="text-xs text-muted-foreground">/</span>
        <a
          href="/writing"
          class={cn(
            isActive("/writing") ? "text-foreground no-underline" : "link"
          )}>Writing</a
        >
        <span class="text-xs text-muted-foreground">/</span>
        <a
          href="/projects"
          class={cn(
            isActive("/projects") ? "text-foreground no-underline" : "link"
          )}>Projects</a
        >
        <span class="hidden flex-row items-center gap-2 sm:flex">
          <span class="text-xs text-muted-foreground">/</span>
          <a
            href="/now"
            class={cn(
              isActive("/now") ? "text-foreground no-underline" : "link"
            )}>Now</a
          >
        </span>
      </nav>
    </header>

    <main class="grow">
      <slot />
    </main>

    <Footer />

    <script>
      const triggers = document.querySelectorAll("[data-swing-trigger]")

      triggers.forEach((trigger) => {
        trigger.addEventListener("mouseenter", () => {
          const targets = document.querySelectorAll("[data-swing-target]")

          targets.forEach((target) => {
            target.classList.add("animate-swing")
          })
        })
      })
    </script>
  </body>
</html>
