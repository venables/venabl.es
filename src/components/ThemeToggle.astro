---
import { cn } from "../lib/utils/cn"

interface Props {
  class?: string
}

const { class: className } = Astro.props
---

<div class={cn("flex items-center gap-2", className)}>
  <button
    id="light-toggle"
    class="link border-0 bg-transparent p-0 text-foreground no-underline dark:text-link dark:underline dark:underline-offset-4"
    >light</button
  >
  <span class="text-foreground">/</span>
  <button
    id="dark-toggle"
    class="border-0 bg-transparent p-0 text-link underline underline-offset-4 dark:text-foreground dark:no-underline"
    >dark</button
  >
</div>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme") ?? "light"
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark"
    }
    return "light"
  })()

  if (theme === "light") {
    document.documentElement.classList.remove("dark")
    document.getElementById("light-toggle")?.classList.add("link")
  } else {
    document.documentElement.classList.add("dark")
    document.getElementById("dark-toggle")?.classList.add("link")
  }

  window.localStorage.setItem("theme", theme)

  const handleToggleClick = (isDark) => {
    const element = document.documentElement
    if (isDark) {
      element.classList.add("dark")
      document.getElementById("dark-toggle")?.classList.add("link")
      document.getElementById("light-toggle")?.classList.remove("link")
    } else {
      element.classList.remove("dark")
      document.getElementById("light-toggle")?.classList.add("link")
      document.getElementById("dark-toggle")?.classList.remove("link")
    }
    localStorage.setItem("theme", isDark ? "dark" : "light")
  }

  document
    .getElementById("dark-toggle")
    ?.addEventListener("click", () => handleToggleClick(true))

  document
    .getElementById("light-toggle")
    ?.addEventListener("click", () => handleToggleClick(false))
</script>
